{"version":3,"sources":["Badge.js","Table.js","App.js","index.js"],"names":["GITHUB","buttonStyle","float","outline","padding","fontWeight","lineHeight","fontSize","color","verticalAlign","cursor","border","borderRadius","borderTopRightRadius","borderBottomRightRadius","backgroundImage","buttonHoverStyle","textDecoration","backgroundColor","borderColor","onHover","baseStyle","hoverStyle","BaseComponent","Component","constructor","props","super","this","state","hover","render","onMouseEnter","setState","onMouseLeave","style","Object","assign","GithubButton","label","path","width","height","aria-hidden","role","version","viewBox","d","defaultProps","Star","Fork","Watch","CountSpan","borderLeft","ButtonCount","count","repo","buttonLink","countLink","type","font","href","React","createElement","GithubBadge","componentDidMount","cb","request","XMLHttpRequest","onreadystatechange","readyState","DONE","status","Error","resp","JSON","parse","responseText","err","open","send","getRepoInfo","info","countFn","GithubStar","stargazers_count","GithubFork","forks_count","GithubWatch","watchers_count","Table","className","id","renderers","code","language","value","dark","children","App","useState","captcha","setCaptcha","markdown","captchaText","text","captchaLength","iconColor","iconName","iconSize","containerClassName","iconWrapperClassName","canvasClassName","iconClassName","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d6bba2eb.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nconst GITHUB = \"https://github.com\";\r\nconst GITHUB_API = \"https://api.github.com\";\r\n\r\nconst buttonStyle = {\r\n\tfloat: \"left\",\r\n\toutline: \"none\",\r\n\tpadding: \"2px 10px\",\r\n\tfontWeight: \"bold\",\r\n\tlineHeight: \"20px\",\r\n\tfontSize: \"13px\",\r\n\tcolor: \"#333\",\r\n\tverticalAlign: \"middle\",\r\n\tcursor: \"pointer\",\r\n\tborder: \"1px solid #d5d5d5\",\r\n\tborderRadius: \"3px\",\r\n\tborderTopRightRadius: \"0\",\r\n\tborderBottomRightRadius: \"0\",\r\n\tbackgroundImage: \"linear-gradient(#fcfcfc, #eee)\"\r\n};\r\n\r\nconst buttonHoverStyle = {\r\n\ttextDecoration: \"none\",\r\n\tbackgroundColor: \"#ddd\",\r\n\tbackgroundImage: \"linear-gradient(#eee, #ddd)\",\r\n\tborderColor: \"#ccc\"\r\n};\r\n\r\nconst numStyle = {\r\n\ttextDecoration: \"none\",\r\n\tpadding: \"2px 7px\",\r\n\tfontSize: \"11px\",\r\n\tfontWeight: \"bold\",\r\n\tlineHeight: \"20px\",\r\n\tcolor: \"#333\",\r\n\tverticalAlign: \"middle\",\r\n\tbackgroundColor: \"#fff\",\r\n\tborder: \"1px solid #ddd\",\r\n\tborderLeft: \"0\",\r\n\tborderTopRightRadius: \"3px\",\r\n\tborderBottomRightRadius: \"3px\",\r\n\tfloat: \"left\"\r\n};\r\n\r\nconst numHoverStyle = {\r\n\tcursor: \"pointer\",\r\n\tcolor: \"#4078c0\"\r\n};\r\n\r\nconst onHover = (baseStyle, hoverStyle, BaseComponent) => class extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { hover: false };\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<span\r\n\t\t\t\tonMouseEnter={ () => this.setState({ hover: true }) }\r\n\t\t\t\tonMouseLeave={ () => this.setState({ hover: false }) }\r\n\t\t\t>\r\n\t\t\t\t<BaseComponent\r\n\t\t\t\t\t{ ...(this.props) }\r\n\t\t\t\t\tstyle={ Object.assign({}, baseStyle, this.state.hover ? hoverStyle : {}) }\r\n\t\t\t\t/>\r\n\t\t\t</span>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nconst GithubButton = ({ style, label, path, width, height }) => (\r\n\t<button style={ style }>\r\n\t\t<svg\r\n\t\t\tstyle={{ verticalAlign: \"text-top\" }}\r\n\t\t\taria-hidden=\"true\"\r\n\t\t\theight={ height }\r\n\t\t\trole=\"img\"\r\n\t\t\tversion=\"1.1\"\r\n\t\t\tviewBox={ `0 0 ${width} ${height}` }\r\n\t\t\twidth={ width }\r\n\t\t>\r\n\t\t\t<path d={ path }></path>\r\n\t\t</svg>\r\n\t\t&nbsp;{ label }\r\n\t</button>\r\n);\r\nGithubButton.defaultProps = {\r\n\twidth: \"14\",\r\n\theight: \"16\"\r\n};\r\n\r\nconst Star = onHover(\r\n\tbuttonStyle,\r\n\tbuttonHoverStyle,\r\n\t({ style }) => (\r\n\t\t<GithubButton\r\n\t\t\tstyle={ style }\r\n\t\t\tlabel=\"Star\"\r\n\t\t\tpath=\"M14 6l-4.9-0.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14l4.33-2.33 4.33 2.33L10.4 9.26 14 6z\" />\r\n\t)\r\n);\r\n\r\nconst Fork = onHover(\r\n\tbuttonStyle,\r\n\tbuttonHoverStyle,\r\n\t({ style }) => (\r\n\t\t<GithubButton\r\n\t\t\tstyle={ style }\r\n\t\t\tlabel=\"Fork\"\r\n\t\t\tpath=\"M8 1c-1.11 0-2 0.89-2 2 0 0.73 0.41 1.38 1 1.72v1.28L5 8 3 6v-1.28c0.59-0.34 1-0.98 1-1.72 0-1.11-0.89-2-2-2S0 1.89 0 3c0 0.73 0.41 1.38 1 1.72v1.78l3 3v1.78c-0.59 0.34-1 0.98-1 1.72 0 1.11 0.89 2 2 2s2-0.89 2-2c0-0.73-0.41-1.38-1-1.72V9.5l3-3V4.72c0.59-0.34 1-0.98 1-1.72 0-1.11-0.89-2-2-2zM2 4.2c-0.66 0-1.2-0.55-1.2-1.2s0.55-1.2 1.2-1.2 1.2 0.55 1.2 1.2-0.55 1.2-1.2 1.2z m3 10c-0.66 0-1.2-0.55-1.2-1.2s0.55-1.2 1.2-1.2 1.2 0.55 1.2 1.2-0.55 1.2-1.2 1.2z m3-10c-0.66 0-1.2-0.55-1.2-1.2s0.55-1.2 1.2-1.2 1.2 0.55 1.2 1.2-0.55 1.2-1.2 1.2z\" />\r\n\t)\r\n);\r\n\r\nconst Watch = onHover(\r\n\tbuttonStyle,\r\n\tbuttonHoverStyle,\r\n\t({ style }) => (\r\n\t\t<GithubButton\r\n\t\t\tstyle={ style }\r\n\t\t\twidth=\"16\"\r\n\t\t\tlabel=\"Watch\"\r\n\t\t\tpath=\"M8.06 2C3 2 0 8 0 8s3 6 8.06 6c4.94 0 7.94-6 7.94-6S13 2 8.06 2z m-0.06 10c-2.2 0-4-1.78-4-4 0-2.2 1.8-4 4-4 2.22 0 4 1.8 4 4 0 2.22-1.78 4-4 4z m2-4c0 1.11-0.89 2-2 2s-2-0.89-2-2 0.89-2 2-2 2 0.89 2 2z\" />\r\n\t)\r\n);\r\n\r\nconst CountSpan = onHover(numStyle, numHoverStyle, \"span\");\r\n\r\nconst ButtonCount = ({ count, repo, buttonLink, countLink, type }) => (\r\n\t<div style={{\r\n\t\tfont: \"13px / 1.4 Helvetica, Arial, sans-serif\"\r\n\t}}>\r\n\t\t<a href={ buttonLink || `${GITHUB}/${repo}` }>\r\n\t\t\t{ React.createElement(type) }\r\n\t\t</a>\r\n\t\t<a href={ countLink || `${GITHUB}/${repo}/stargazers` }>\r\n\t\t\t<CountSpan>{ count }</CountSpan>\r\n\t\t</a>\r\n\t</div>\r\n);\r\n\r\nfunction getRepoInfo(repo, cb) {\r\n\tconst request = new XMLHttpRequest();\r\n\trequest.onreadystatechange = () => {\r\n\t\tif (request.readyState !== XMLHttpRequest.DONE\r\n\t\t   || request.status !== 200) {\r\n\t\t\treturn cb(new Error(\"Failed to load stars\"));\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tconst resp = JSON.parse(request.responseText);\r\n\t\t\treturn cb(null, resp);\r\n\t\t} catch (err) {\r\n\t\t\treturn cb(err);\r\n\t\t}\r\n\t};\r\n\trequest.open(\"GET\", `${GITHUB_API}/repos/${repo}`);\r\n\trequest.send();\r\n}\r\n\r\nclass GithubBadge extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tcount: 0\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tgetRepoInfo(this.props.repo, (err, info) => err || this.setState({ count: this.props.countFn(info) }));\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<ButtonCount\r\n\t\t\t\t{ ...(this.props) }\r\n\t\t\t\tcount={ this.state.count } />\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport const GithubStar = props => (\r\n\t<GithubBadge\r\n\t\tbuttonLink={ `${GITHUB}/${props.repo}` }\r\n\t\tcountLink={ `${GITHUB}/${props.repo}/stargazers` }\r\n\t\t{ ...props }\r\n\t\ttype={ Star }\r\n\t\tcountFn={ info => info.stargazers_count } />\r\n);\r\n\r\nexport const GithubFork = props => (\r\n\t<GithubBadge\r\n\t\tbuttonLink={ `${GITHUB}/${props.repo}` }\r\n\t\tcountLink={ `${GITHUB}/${props.repo}/network` }\r\n\t\t{ ...props }\r\n\t\ttype={ Fork }\r\n\t\tcountFn={ info => info.forks_count } />\r\n);\r\n\r\nexport const GithubWatch = props => (\r\n\t<GithubBadge\r\n\t\tbuttonLink={ `${GITHUB}/${props.repo}/subscription` }\r\n\t\tcountLink={ `${GITHUB}/${props.repo}/watchers` }\r\n\t\t{ ...props }\r\n\t\ttype={ Watch }\r\n\t\tcountFn={ info => info.watchers_count } />\r\n);","import React from 'react'\r\n\r\nfunction Table() {\r\n  return (\r\n    <div className='props-table'>\r\n      <table id='table'>\r\n        <tr>\r\n          <th>Props</th>\r\n          <th>Type</th>\r\n          <th>Required</th>\r\n          <th>Default</th>\r\n          <th>Description</th>\r\n        </tr>\r\n        <tr>\r\n          <td>captchaText</td>\r\n          <td>Func</td>\r\n          <td>True</td>\r\n          <td>-</td>\r\n          <td>callback function for returning the captcha text</td>\r\n        </tr>\r\n        <tr>\r\n          <td>captchaLength</td>\r\n          <td>Number</td>\r\n          <td>True</td>\r\n          <td>6</td>\r\n          <td>length of captcha</td>\r\n        </tr>\r\n        <tr>\r\n          <td>captchaButtonClick</td>\r\n          <td>Func</td>\r\n          <td>False</td>\r\n          <td>-</td>\r\n          <td>callback function for captcha button click</td>\r\n        </tr>\r\n\r\n        <tr>\r\n          <td>onCanvasClick</td>\r\n          <td>Func</td>\r\n          <td>False</td>\r\n          <td>-</td>\r\n          <td>callback function for canvas button click</td>\r\n        </tr>\r\n        <tr>\r\n          <td>height</td>\r\n          <td>Number</td>\r\n          <td>False</td>\r\n          <td>50</td>\r\n          <td>height of captcha container in px</td>\r\n        </tr>\r\n        <tr>\r\n          <td>width</td>\r\n          <td>Number</td>\r\n          <td>False</td>\r\n          <td>100</td>\r\n          <td>width of captcha container in px</td>\r\n        </tr>\r\n        <tr>\r\n          <td>iconName</td>\r\n          <td>String</td>\r\n          <td>False</td>\r\n          <td>FiRefreshCw</td>\r\n          <td>\r\n            Icon Name ( Use only react-icons library icons) url\r\n            https://react-icons.github.io/react-icons/\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>iconColor</td>\r\n          <td>String</td>\r\n          <td>False</td>\r\n          <td>#fff</td>\r\n          <td>color of button icon</td>\r\n        </tr>\r\n        <tr>\r\n          <td>iconSize</td>\r\n          <td>String</td>\r\n          <td>False</td>\r\n          <td>1em</td>\r\n          <td>size of icon</td>\r\n        </tr>\r\n\r\n        <tr>\r\n          <td>fontSize</td>\r\n          <td>String</td>\r\n          <td>False</td>\r\n          <td>4em</td>\r\n          <td>size of font inside of captcha container</td>\r\n        </tr>\r\n        <tr>\r\n          <td>containerClassName</td>\r\n          <td>String</td>\r\n          <td>False</td>\r\n          <td>react-captcha</td>\r\n          <td>className for whole captcha container</td>\r\n        </tr>\r\n        <tr>\r\n          <td>iconWrapperClassName</td>\r\n          <td>String</td>\r\n          <td>False</td>\r\n          <td>react-captcha-icon-wrapper</td>\r\n          <td>className for button</td>\r\n        </tr>\r\n        <tr>\r\n          <td>canvasClassName</td>\r\n          <td>String</td>\r\n          <td>False</td>\r\n          <td>react-captcha-canvas</td>\r\n          <td>className for captcha canvas element</td>\r\n        </tr>\r\n        <tr>\r\n          <td>iconWrapperClassName</td>\r\n          <td>String</td>\r\n          <td>False</td>\r\n          <td>react-captcha-icon-wrapper</td>\r\n          <td>className for button</td>\r\n        </tr>\r\n        <tr>\r\n          <td>iconClassName</td>\r\n          <td>String</td>\r\n          <td>False</td>\r\n          <td>react-captcha-icon</td>\r\n          <td>className for icon</td>\r\n        </tr>\r\n        <tr>\r\n          <td>charactersInclude</td>\r\n          <td>String</td>\r\n          <td>False</td>\r\n          <td>\r\n            0123456789abcdefghijklmnopqrstuvwxz ABCDEFGHIJKLMNOPQRSTUVWXYZ!#$%^&\r\n          </td>\r\n          <td>string from which captcha will generate</td>\r\n        </tr>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Table\r\n","import React, { useState } from 'react'\nimport ReactCaptchaa from 'react-captchaa'\nimport 'react-captchaa/dist/index.css'\nimport ReactMarkdown from 'react-markdown'\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter'\nimport { dark } from 'react-syntax-highlighter/dist/esm/styles/prism'\nimport { GithubStar, GithubWatch, GithubFork } from './Badge'\nimport Table from './Table'\n\nconst renderers = {\n  code: ({ language, value }) => {\n    return (\n      <SyntaxHighlighter style={dark} language={language} children={value} />\n    )\n  }\n}\n\nconst App = () => {\n  const [captcha, setCaptcha] = useState('')\n  const getAndSetCaptchaText = (text) => {\n    setCaptcha(text)\n  }\n\n  const propsTable = `\n  |       Property       |  Type  | Required |                               Default                               | Description                                                                                      |\n|:--------------------:|:------:|:--------:|:-------------------------------------------------------------------:|--------------------------------------------------------------------------------------------------|\n|      captchaText     |  Func  |   true   |                                  -                                  | callback function for returning the captcha text                                                 |\n|     captchaLength    | Number |   true   |                                  6                                  | length of captcha                                                                                |\n|  captchaButtonClick  |  Func  |   false  |                                  -                                  | callback function for captcha button click                                                       |\n|     onCanvasClick    |  Func  |   false  |                                  -                                  | callback function for canvas click                                                               |\n|        height        | Number |   false  |                                  50                                 | height of captcha container in px                                                                |\n|         width        | Number |   false  |                                 100                                 | width of captcha container in px                                                                 |\n|       iconName       | String |   false  |                             FiRefreshCw                             | Icon Name ( Use only react-icons library icons) url  https://react-icons.github.io/react-icons/ |\n|       iconColor      | String |   false  |                                 #fff                                | color of button icon                                                                             |\n|       iconSize       | String |   false  |                                 1em                                 | size of icon                                                                                     |\n|       fontSize       | String |   false  |                                 4em                                 | size of font inside of captcha container                                                         |\n|  containerClassName  | String |   false  |                            react-captcha                            | className for whole captcha container                                                            |\n| iconWrapperClassName | String |   false  |                      react-captcha-icon-wrapper                     | className for button                                                                             |\n|    canvasClassName   | String |   false  |                         react-captcha-canvas                        | className for captcha canvas element                                                             |\n|     iconClassName    | String |   false  |                          react-captcha-icon                         | className for icon                                                                               |\n|   charactersInclude  | String |   false  | 0123456789abcdefghijklmnopqrstuvwxzABCDEFGHIJKLMNOPQRSTUVWXYZ!#$%^& | string from which captcha will generate                                                          |`\n\n  const markdown = `Sample Component Code ✅:\n\n~~~js\nimport React, { Component } from 'react'\nimport ReactCaptchaa from 'react-captchaa'\nimport 'react-captchaa/dist/index.css'\n\nclass Example extends Component {\n  render() {\n    return ( \n      <ReactCaptchaa\n      captchaText= {(captchaText) => {\n        console.log(captchaText)\n        // captcha text ${captcha}\n      }}\n      captchaLength= {6}\n      captchaButtonClick= {(e)=> {console.log(e)}}\n      onCanvasClick= {(e)=> {console.log(e)}}\n      height= {150}\n      width= {280}\n      iconName= {'FiRefreshCw'}\n      iconColor= {'#fff'}\n      fontSize= {'4em'}\n      iconSize= {'1em'}\n      containerClassName= {'react-captcha'}\n      iconWrapperClassName= {'react-captcha-icon-wrapper'}\n      canvasClassName= {'react-captcha-canvas'}\n      iconClassName= {'react-captcha-icon'}\n      charactersInclude= { \"0123456789abcdefghijklmnopqrs\n      tuvwxzABCDEFGHIJKLMNOPQRSTUVWXYZ!#$%^&\" }\n       />\n       \n       )\n  }\n}\n~~~\n`\n  const installCode = `To install, Hit this in terminal 🐱‍🏍:\n\n~~~js\nnpm install react-captchaa\n~~~\n`\n  return (\n    <div className='root-wrapper'>\n      <div className='github-badges-wrapper'>\n        <GithubStar className='github-badge' repo={'alii13/react-captchaa'} />\n        <GithubWatch className='github-badge' repo={'alii13/react-captchaa'} />\n        <GithubFork className='github-badge' repo={'alii13/react-captchaa'} />\n      </div>\n      <div className='parent-captcha-wrapper'>\n        <div className='sub-parent-captcha-wrapper'>\n          <div className='text-content'>\n            <h1 className='h1-heading title'>React Captchaa ❤️</h1>\n            <p className='text-grey'>\n              A simple lightweight react component for generating captchas.\n            </p>\n          </div>\n          <div className='captcha-wrapper'>\n            <ReactCaptchaa\n              captchaText={getAndSetCaptchaText}\n              captchaLength={6}\n              height={150}\n              width={280}\n              iconColor={'#fff'}\n              iconName={'FiRefreshCw'}\n              iconSize={'1em'}\n              fontSize={'4em'}\n              containerClassName={'react-captcha'}\n              iconWrapperClassName={'react-captcha-icon-wrapper'}\n              canvasClassName={'react-captcha-canvas'}\n              iconClassName={'react-captcha-icon'}\n            />\n          </div>\n          <div className='installation-code'>\n            <ReactMarkdown renderers={renderers} children={installCode} />\n          </div>\n        </div>\n        <div className='component-code'>\n          <ReactMarkdown renderers={renderers} children={markdown} />\n        </div>\n      </div>\n      <Table />\n      <footer className='footer'>\n        <p>\n          Made with ❤️ by{' '}\n          <a className='footer-link' href='https://github.com/alii13'>\n            Ali\n          </a>\n        </p>\n      </footer>\n    </div>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}